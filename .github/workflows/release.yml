name: Post-merge/release workflow

on:
  workflow_dispatch:
  pull_request:
    types:
      - closed
    branches:
      - main

jobs:
  release:
    if: github.event.pull_request.merged == true || github.event_name == 'workflow_dispatch'
    
    runs-on: ubuntu-22.04
    
    steps:
      #
      # Checkout the source code.
      #
      - name: Checkout the source code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # 4.2.2
        with:
          token: ${{ secrets.GIT_PAT }}
          fetch-depth: 0

      #
      # Install Node.
      #
      - name: Install Node
        uses: actions/setup-node@64ed1c7eab4cce3362f8c340dee64e5eaeef8f7c
        with:
          node-version: "20.18.0"
          
      #
      # Calculate of the new version (dry-run).
      #
      - name: Calculate of the new version (dry-run)
        uses: cycjimmy/semantic-release-action@b1b432f13acb7768e0c8efdec416d363a57546f2 # 4.1.1
        id: semantic
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          semantic_version: 21.1.1
          branch: main
          extra_plugins: |
            @semantic-release/release-notes-generator@14.0.1 # 44c780c6f9c1bf2643fe48b6718bd9a84b820132
            @semantic-release/git@10.0.1 # 3e934d45f97fd07a63617c0fc098c9ed3e67d97a
          dry_run: true

      #
      # Setup Java Build Environment.
      #
      - name: Setup Java Build Environment
        uses: pagopa/mil-actions/setup-java-build-env@6dba0fb019f2714767a0b7954fb12ebd7ec0aa3e # 1.0.0
        with:
          gh_user: ${{ secrets.GIT_USER }}
          gh_token: ${{ secrets.GIT_PAT }}

      #
      # Update of pom.xml with the new version + Git add + commit + push of the updated pom.xml.
      #
      - name: Update of pom.xml with the new version + Git add + commit + push of the updated pom.xml
        if: steps.semantic.outputs.new_release_published == 'true'
        run: |
          ${{ runner.temp }}/maven/bin/mvn versions:set -DnewVersion=${{ steps.semantic.outputs.new_release_version }} -s ${{ runner.temp }}/settings.xml --no-transfer-progress
          git config user.name "GitHub Workflow"
          git config user.email "<>"
          git add pom.xml
          git commit -m "pom.xml updated with new version ${{ steps.semantic.outputs.new_release_version }}"
          git push origin main

      #
      # Calculation of the new version (again) with tagging + releasing + etc.
      #
      - name: Calculation of the new version (again) with tagging + releasing + etc
        if: steps.semantic.outputs.new_release_published == 'true'
        uses: cycjimmy/semantic-release-action@b1b432f13acb7768e0c8efdec416d363a57546f2 # 4.1.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          semantic_version: 21.1.1
          branch: main
          extra_plugins: |
            @semantic-release/release-notes-generator@14.0.1 # 44c780c6f9c1bf2643fe48b6718bd9a84b820132
            @semantic-release/git@10.0.1 # 3e934d45f97fd07a63617c0fc098c9ed3e67d97a
          dry_run: false

      #
      # Build and deploy.
      #
      - name: Build and deploy
        if: steps.semantic.outputs.new_release_published == 'true'
        run: ${{ runner.temp }}/maven/bin/mvn --batch-mode deploy -s ${{ runner.temp }}/settings.xml

      #
      # Build and deploy site.
      #
      - name: Build and deploy site
        run: ${{ runner.temp }}/maven/bin/mvn --batch-mode site -s ${{ runner.temp }}/settings.xml --no-transfer-progress
